[SNAPSHOT]
snapshot_interval_minutes = 10
compress_state = True

[MASKING]
masking = [
    # Product ID
    ; {"regex_pattern": "(?<=product )([#\"]?[A-Z0-9]{6,}[\"]?)", "mask_with": "PRODUCTID"},
    {"regex_pattern": "(?<=product )([#]?[\"]?[A-Z0-9]{6,}[\"]?)", "mask_with": "PRODUCTID"},
    {"regex_pattern": "(?<=convert price of )([#\"]?[A-Z0-9]{6,}[\"]?)", "mask_with": "PRODUCTID"},
    {"regex_pattern": "(?<=product info \\()([#A-Z0-9]{6,})(?=\\))", "mask_with": "PRODUCTID"},
    # IP PORT
    {"regex_pattern": "\\b\\d{1,3}(?:\\.\\d{1,3}){3}(?::\\d+)?\\b", "mask_with": "IP_PORT"},
    # Timestamp
    {"regex_pattern": "@\\d+\\.\\d+", "mask_with": "TIMESTAMP"},
    # Currency
    {"regex_pattern": "(?<=to )(?:EUR|JPY|CAD|USD)", "mask_with": "CURRENCY"},
    # UUID
    {"regex_pattern": "\\b[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\b", "mask_with": "UUID"},
    # Redis Connection Exception
    {"regex_pattern": "StackExchange\\.Redis\\.RedisTimeoutException: [\\s\\S]+", "mask_with": "StackExchange.Redis.RedisTimeoutException"},
    {"regex_pattern": "StackExchange\\.Redis\\.RedisConnectionException: [\\s\\S]+","mask_with":"StackExchange.Redis.RedisConnectionException"},
    # RPC
    {"regex_pattern": "debug_error_string = \"\\{[\\s\\S]*\\}\"","mask_with":"<DEBUG_ERROR>"}
    ]
; mask_prefix = <
; mask_suffix = >

[DRAIN]
sim_th = 1
depth = 4
max_children = 100
max_clusters = 1024
extra_delimiters = ["_"]

[PROFILING]
enabled = True
report_sec = 30
; use_simhash = true



; {"regex_pattern":"(?<=get results:)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=get results: )(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=cart items:)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=context_words=)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=visa ending)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=invoked with request)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=Query cost of products)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=Quote shipping with items)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=user_id)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=query cost of products)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=currency_code:)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"(?<=product_ids=)(.+?$)", "mask_with": "ITEM"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9a-f]{32}?)((?=[^A-Za-z0-9])|$)", "mask_with": "TRACEID"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([A-Za-z0-9]{16} ?)((?=[^A-Za-z0-9])|$)", "mask_with": "SPANID"},
    ; {"regex_pattern":"((?<=[^A-Z0-9])|^)([A-Z0-9]{10} ?)((?=[^A-Z0-9])|$)", "mask_with": "PRODUCTID"},
    ; {"regex_pattern":"((?<=[^A-Z0-9])|^)([a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12})((?=[^A-Z0-9])|$)", "mask_with": "USERID"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([A-F]{2})(0-9{1,})((?=[^A-Za-z0-9])|$)", "mask_with": "AMOUNT"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(([0-9a-f]{2,}:){3,}([0-9a-f]{2,}))((?=[^A-Za-z0-9])|$)", "mask_with": "ID"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})((?=[^A-Za-z0-9])|$)", "mask_with": "IP"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9a-f]{7}?)((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(0x[a-f0-9A-F]+)((?=[^A-Za-z0-9])|$)", "mask_with": "HEX"},
    ; {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([\\-\\+]?\\d+)((?=[^A-Za-z0-9])|$)", "mask_with": "NUM"},
    ; {"regex_pattern":"(?<=executed cmd )(\".+?\")", "mask_with": "CMD"}